- if !@order.nil?
  %h1.text-center
    = @table.name
  %p#idOrder(hidden= true)
    = @order.id
  .col-md-4
    %h2.text-center Order
    - @cont = 0
    - @order_products.each do |order_product|
      - if @order.id == order_product.order_id
        - @cont = @cont + 1
    - if @cont == 0
      %p Press 'ADD' in the product to add to the order

    .table-responsive
      %table.table
        %thead
          %tr
            %th Products 
            %th Actions
        %tbody#table_products
          - @order_products.each do |order_product|
            - if @order.id == order_product.order_id
              %tr
                - product = @products.find(order_product.product_id)
                - @order.payvalue = @order.payvalue + product.price
                %td= link_to product.name, total_products_of_path(product), class:"btn btn-defult"
                %td= link_to 'DELETE', order_product, method: :delete, data: { confirm: 'Are you sure?' }, class:"btn btn-raised btn-danger"
    %p
      %strong
        Pay value:
    %p#payvalue
      = @order.payvalue
    = link_to "Finish order", order_products_path, class:"btn btn-primary"
  .col-md-8
    %h2.text-center Products
    - @products.each do |product|
      .col-md-4.inline-block
        .panel.panel-primary.ui-widget-content
          .panel-heading
            %p.text-center 
              = product.name
          .panel-body
            = image_tag(product.avatar.url, class: "img-responsive", alt: "Product: #{product.name}")
            %p
              %strong 
                Price:
              $
              = product.price
            - if !@order_product.nil?
              = form_for @order_product, remote: true, builder: BootstrapFormBuilder, html: {id:"order_product-form", :"data-type" => "json"}  do |f|
                = f.errors
                = f.hidden_field :order_id, value: @order.id
                = f.hidden_field :product_id, value: product.id
                = f.submit 'Add' 
-else
  %h1.text-center Listing order_products
  - @orders.each do |order|
    - if !order.ready?
      - if (order.pinwaiter == current_user.pin) or current_user.chef?
        .card.no-float.inline-block.bottom-space.big-padding(id= "card-#{order.id}")
          .col-md-3
            %h1.card-title.big 
              = @tables.find(order.table_id).name
            .card-block
              %h4
                %strong 
                  Status:
              %p(id= "status-#{order.id}")
                = order.status
              - if order.wait?
                .progress.progress-striped
                  .progress-bar.progress-bar-info(style="width: 40%")
              - if order.process?
                .progress.progress-striped
                  .progress-bar.progress-bar-warning(style="width: 80%")
              %p.card-text
                %strong 
                  Order date:
                = order.orderdate
              - payvalue = 0
              %p.card-text
                %strong 
                  Pay value:
                  - @order_products.each do |order_product|
                    - if order.id == order_product.order_id
                      - payvalue = payvalue + @products.find(order_product.product_id).price
                  - order.payvalue = payvalue
                  = order.payvalue
              - if !order.address.nil?
                %p.card-text
                  %strong 
                    Address:
                  = order.address
              - if order.wait?
                = form_for order, remote: true, html: {id:"order-ready-form",hidden: true , :"data-type" => "json"}  do |f|
                  = f.hidden_field :pinchef, value: current_user.pin
                  = f.hidden_field :status, value: :ready
                  = f.hidden_field :payvalue, value: order.payvalue
                  = f.submit 'Ready', class: "btn btn-primary"
                - if current_user.waiter?
                  = link_to "Change products", order_products_of_path(order), class:"btn btn-primary"
                - elsif current_user.chef?
                  = form_for order, remote: true, html: {id:"order-process-form", :"data-type" => "json"}  do |f|
                    = f.hidden_field :pinchef, value: current_user.pin
                    = f.hidden_field :status, value: :process
                    = f.hidden_field :attenddate, value: Time.now
                    = f.hidden_field :payvalue, value: order.payvalue
                    = f.submit 'Attend', class: "btn btn-success"
              - if order.process? and current_user.chef?
                = form_for order, remote: true, html: {id:"order-ready-form", :"data-type" => "json"}  do |f|
                  = f.hidden_field :pinchef, value: current_user.pin
                  = f.hidden_field :status, value: :ready
                  = f.hidden_field :payvalue, value: order.payvalue
                  = f.submit 'Ready', class: "btn btn-primary"
          .col-md-9
            - @order_products.each do |order_product|
              - if order_product.order_id == order.id
                -product = @products.find(order_product.product_id)
                .col-md-4.inline-block
                  .panel.panel-primary.ui-widget-content
                    .panel-heading
                      %p.text-center 
                        = product.name
                    .panel-body.image
                      = image_tag(product.avatar.url, class: "img-responsive", size: "200x150", alt: "Product: #{product.name}")
                      %p
                        %strong 
                          Price:
                        $
                        = product.price
                      .description{"hidden"=>"true"}
                        %ol
                        - @total_products.each do |total_product|
                          -if total_product.product_id == product.id
                            - ingredient = @ingredients.find(total_product.ingredient_id)
                            %li
                              = ingredient.name
  :javascript
      $(document).ready( function() {
        $(document).ready(function() {
          setTimeout(function(){
            window.location.reload(0);
          }, 20000);
        });
      });